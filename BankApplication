
public class BankAccount {
	/**
	* Skapar ett nytt bankkonto åt en innehavare med namn 'holderName' och
	* id 'holderId'. Kontot tilldelas ett unikt kontonummer och innehåller
	* inledningsvis 0 kr.
	*/
	private String holderName;
	private long holderId;
	private Customer holder;
	private double money;
	private int accountNbr;
	
	
	BankAccount(String holderName, long holderId) {
	this.holderName = holderName;
	this.holderId = holderId;
	}
	
	/**
	* Skapar ett nytt bankkonto med innehavare 'holder'. Kontot tilldelas
	* ett unikt kontonummer och innehåller inledningsvis 0 kr.
	*/
	BankAccount(Customer holder){
		this.holder = holder;
	}
	
	/** Tar reda på kontots innehavare. */
	Customer getHolder() {
		return holder;
	}
	
	/** Tar reda på det kontonummer som identifierar detta konto. */
	int getAccountNumber() {
		return accountNbr;
	}
		
	
	/** Tar reda på hur mycket pengar som finns på kontot. */
	double getAmount() {
		return money;
	}
	
	/** Sätter in beloppet 'amount' på kontot. */
	void deposit(double amount) {
		money = money + amount;
	}
	/**
	* Tar ut beloppet 'amount' från kontot. Om kontot saknar täckning
	* blir saldot negativt.
	*/
	void withdraw(double amount) {
		if(amount > money) {
			System.out.println("Inte tillräckligt med pengar");
		}
		else {
			money = money - amount;
		}
			
	}
	
	/** Returnerar en strängrepresentation av bankkontot. */
	public String toString() {
		String output = "Holder: " + holderName + ". Account Number: " + accountNbr + ". Amount: " + money;
		return output;
	}
}
